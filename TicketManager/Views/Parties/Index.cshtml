@using Microsoft.AspNetCore.Identity
@inject Microsoft.AspNetCore.Identity.SignInManager<IdentityUser> signInManager
@model IEnumerable<TicketManager.Models.ConcertTypes.Party>

@{
    ViewData["Title"] = "Parties";
}

<h1>Parties</h1>

@if (signInManager.IsSignedIn(User) && User.IsInRole("Administrator"))
{
    <p>
        <a asp-action="Create">Create New</a>
    </p>
}

<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.DocumentAgeConfirmation)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Singer)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Location)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Date)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.DocumentAgeConfirmation)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Singer.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Location.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Date)
                </td>
                <td>
                    @if (signInManager.IsSignedIn(User) && User.IsInRole("Administrator"))
                    {
                        <a asp-action="Edit" asp-route-id="@item.Id">Edit</a>
                        <a asp-action="Details" asp-route-id="@item.Id">Details</a>
                        <a asp-action="Delete" asp-route-id="@item.Id">Delete</a>
                    }
                    else
                    {
                        <a asp-controller="Tickets" asp-action="AvailableConcertTickets" asp-route-id="@item.Id">Available Tickets</a>
                    }
                </td>
            </tr>
        }
    </tbody>
</table>

<div id="mapDiv" style="width:100%;height:500px;"></div>
<script type="text/javascript">
        window.onload = function () {
            let locations = @Json.Serialize(Model.Select(m => m.Location).Distinct());
            console.log(locations);
            DisplayLocations(locations);
        };
</script>

<script src="https://maps.googleapis.com/maps/api/js?"></script>
<script src="~/js/site.js"></script>
